* exwm

[[https://github.com/ch11ng/exwm][Source]]

Ambrevar's exwm [[https://github.com/Ambrevar/dotfiles/blob/master/.emacs.d/lisp/init-exwm.el][init]] and explanation on [[https://www.reddit.com/r/emacs/comments/6huok9/exwm_configs/][Reddit]] have been very helpful.

#+BEGIN_SRC emacs-lisp :tangle yes
  (use-package exwm
    :ensure t)
  (use-package exwm-config
    :config
    (exwm-config-default)
    (defun js/exwm-lock ()
      (interactive)
      (start-process "slock" nil "slock"))
    (exwm-input-set-key (kbd "s-l") #'js/exwm-lock)
    (exwm-input-set-key (kbd "<XF86Launch7>") #'ace-window)
    (ace-window-display-mode 1))
#+END_SRC

* font

#+BEGIN_SRC emacs-lisp :tangle yes
  (when (member "xos4 Terminus" (font-family-list))
    (set-face-attribute 'default nil :font "xos4 Terminus"))
  (set-face-attribute 'default nil :height 166)
#+END_SRC

* themes

Protesilaos Stavrou has published his accessible [[https://gitlab.com/protesilaos/modus-themes][themes]] on MELPA.  They are on display in his Emacs [[https://www.youtube.com/channel/UC0uTPqBCFIpZxlz_Lv1tk_g][videos]].

#+BEGIN_SRC emacs-lisp :tangle yes
  (use-package modus-operandi-theme
    :ensure t)

  (use-package modus-vivendi-theme
    :ensure t)

  (load-theme 'modus-vivendi)

  (defun prot/modus-themes-toggle ()
      "Simplistic toggle for my Modus Themes.  All it does is check
  if `modus-operandi' (light version) is active and if so switch to
  `modus-vivendi' (dark version).  Else it switches to the light
  theme."
      (interactive)
      (if (eq (car custom-enabled-themes) 'modus-operandi)
          (load-theme 'modus-vivendi t)
        (load-theme 'modus-operandi t)))
#+END_SRC

#+BEGIN_SRC emacs-lisp :tangle no
  (load-theme 'manoj-dark)
#+END_SRC

* default browser

Thank you [[https://github.com/daedreth/UncleDavesEmacs][Uncle Dave]] for this.  Also great videos [[https://www.youtube.com/channel/UCDEtZ7AKmwS0_GNJog01D2g][here]].
[[https://stackoverflow.com/questions/4506249/how-to-make-emacs-org-mode-open-links-to-sites-in-google-chrome][Stack Overflow]] on the topic.

#+BEGIN_SRC emacs-lisp :tangle yes
  (setq browse-url-browser-function 'browse-url-generic
        browse-url-generic-program "qutebrowser")
#+END_SRC

* git interface

[[https://github.com/magit/magit][magit]] [[https://melpa.org/#/magit][MELPA]]

#+BEGIN_SRC emacs-lisp :tangle yes
  (use-package magit
    :ensure t)
#+END_SRC

* display time in mode line
#+BEGIN_SRC emacs-lisp :tangle yes
  (display-time-mode 1)
#+END_SRC
